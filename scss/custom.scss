// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here

// 3. Include remainder of required Bootstrap stylesheets
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/mixins";

// Create your own map
$custom-colors: (
  "Very-dark-blue": hsl(233, 47%, 7%),
  "Dark-desaturated-blue": hsl(244, 38%, 16%),
  "Soft-violet": hsl(277, 64%, 61%),

  //neutral
  "white-75": hsla(0, 0%, 100%, 0.75),
  "white-60": hsla(0, 0%, 100%, 0.6)
);

// Merge the maps
$theme-colors: map-merge($theme-colors, $custom-colors);

// 4. Include any optional Bootstrap CSS as needed
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/utilities";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/helpers";

// 5. Optionally include utilities API last to generate classes based on the Sass map in `_utililies.scss`
@import "../node_modules/bootstrap/scss/utilities/api";

// 6. Add additional custom code here

.ff-inter {
  font-family: "Inter", sans-serif;
}

.ff-lexend {
  font-family: "Lexend Deca", sans-serif;
}

.blend-multiple {
  mix-blend-mode: multiply;
}

.mw-400 {
  max-width: 400px;
}

@media screen and (min-width: 1400px) {
  .mw-400 {
    max-width: 1050px;
  }
}
